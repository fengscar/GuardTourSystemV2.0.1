<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:view="clr-namespace:GuardTourSystem.View">
    <Style x:Key="AppTitleBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="BlueBtn" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="PART_Background"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="4">
                        <Border.Background>
                            <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0.0" Color="White" />
                                <GradientStop Offset="0.5" Color="Salmon" />
                                <GradientStop Offset="0.0" Color="White" />
                            </LinearGradientBrush>-->
                            <SolidColorBrush Color="#0099CC" />
                        </Border.Background>
                        <ContentPresenter
                            Margin="0,4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding ContentControl.Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Border.Background">
                                <Setter.Value>
                                    <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.0" Color="White" />
                                        <GradientStop Offset="0.5" Color="Gold" />
                                        <GradientStop Offset="0.0" Color="Salmon" />
                                    </LinearGradientBrush>-->
                                    <SolidColorBrush Color="#33CCFF" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Direction="0"
                                        Opacity="0.5"
                                        RenderingBias="Quality"
                                        ShadowDepth="0"
                                        Color="DarkTurquoise" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Background" Property="Border.Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3498db" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsEnabled" Value="False">
                            <Setter TargetName="PART_Background" Property="Border.Background">
                                <Setter.Value>
                                    <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.0" Color="White" />
                                        <GradientStop Offset="0.5" Color="Gold" />
                                        <GradientStop Offset="0.0" Color="Salmon" />
                                    </LinearGradientBrush>-->
                                    <SolidColorBrush Color="#EBEBEB" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  关闭界面的按键  -->
    <Style x:Key="CloseBtn" TargetType="Button">
        <Setter Property="Background" Value="Salmon" />
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Content" Value="{DynamicResource Close}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Command" Value="{Binding CClose}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="PART_Background"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="5">
                        <Border.Background>
                            <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0.0" Color="White" />
                                <GradientStop Offset="0.5" Color="Salmon" />
                                <GradientStop Offset="0.0" Color="White" />
                            </LinearGradientBrush>-->
                            <SolidColorBrush Color="Salmon" />
                        </Border.Background>
                        <ContentPresenter
                            Margin="0,4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding ContentControl.Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Border.Background">
                                <Setter.Value>
                                    <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.0" Color="White" />
                                        <GradientStop Offset="0.5" Color="Gold" />
                                        <GradientStop Offset="0.0" Color="Salmon" />
                                    </LinearGradientBrush>-->
                                    <SolidColorBrush Color="Orange" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Direction="0"
                                        Opacity="0.6"
                                        RenderingBias="Performance"
                                        ShadowDepth="0"
                                        Color="#FF0033" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  弹出窗口的确定键  -->
    <Style
        x:Key="ConfirmBtn"
        BasedOn="{StaticResource BlueBtn}"
        TargetType="Button">
        <Setter Property="Width" Value="100" />
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="Content" Value="{Binding ConfirmButtonText}" />
        <Setter Property="Command" Value="{Binding CConfirm}" />
    </Style>

    <Style
        x:Key="ExportExcelBtn"
        BasedOn="{StaticResource BlueBtn}"
        TargetType="Button">
        <Setter Property="Content" Value="{DynamicResource ExportExcel}" />
        <Setter Property="Width" Value="100" />
    </Style>

    <Style
        x:Key="PrintBtn"
        BasedOn="{StaticResource BlueBtn}"
        TargetType="Button">
        <Setter Property="Width" Value="100" />
        <Setter Property="Content" Value="{DynamicResource Print}" />
        <Setter Property="Command" Value="{Binding CPrint}" />
    </Style>


    <Style x:Key="CheckStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border
                        x:Name="ForegroundPanel"
                        Padding="0"
                        BorderBrush="#d4d5d5"
                        BorderThickness="1"
                        CornerRadius="4">
                        <DockPanel>
                            <Border
                                x:Name="CheckFlag"
                                Width="20"
                                Height="20"
                                Margin="10,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                BorderThickness="1"
                                CornerRadius="10">
                                <Grid>
                                    <Path
                                        x:Name="CheckMark"
                                        Width="20"
                                        Height="20"
                                        Data="M 5 7 L 7 15 L 18 2 L 17 2 L 7 14 L 6 7 L 5 7"
                                        Fill="White"
                                        SnapsToDevicePixels="False"
                                        Stroke="White"
                                        StrokeThickness="2"
                                        Visibility="Collapsed" />
                                    <Path
                                        x:Name="InderminateMark"
                                        Width="20"
                                        Height="20"
                                        Data="M 5 5 L 15 15 M 5 15 L 15 5"
                                        SnapsToDevicePixels="False"
                                        Stroke="White"
                                        StrokeThickness="3"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>

                            <TextBlock
                                x:Name="Content"
                                Margin="2,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center" />
                        </DockPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0.0" Color="#89b601" />
                                        <GradientStop Offset="1" Color="#73a80c" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Content" Property="Text" Value="正确" />
                            <Setter TargetName="CheckFlag" Property="Background" Value="#559800" />
                            <Setter TargetName="Content" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="CheckFlag" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0.0" Color="#edb200" />
                                        <GradientStop Offset="1" Color="#ed9e00" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Content" Property="Text" Value="错误" />
                            <Setter TargetName="CheckFlag" Property="Background" Value="#F64708" />
                            <Setter TargetName="Content" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="CheckFlag" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  白色的勾  -->
    <Style x:Key="WhiteCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="metro:ControlsHelper.FocusBorderBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="metro:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftCol" Width="18" />
                            <ColumnDefinition x:Name="RightCol" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="PART_CHECKBOX">
                            <Rectangle Margin="-6,0" Fill="{DynamicResource TransparentWhiteBrush}" />
                            <Border
                                x:Name="normal"
                                Width="18"
                                Height="18"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <Path
                                x:Name="checkBox"
                                Width="12"
                                Height="10"
                                Data="M1145.60717773438,430C1145.60717773438,430 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1138,434.553833007813 1138,434.553833007813 1138,434.553833007813 1141.48217773438,438 1141.48217773438,438 1141.48217773438,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.60717773438,430 1145.60717773438,430z"
                                Opacity="0"
                                Stretch="Fill"
                                UseLayoutRounding="False">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}" />
                                </Path.Fill>
                            </Path>
                            <Rectangle
                                x:Name="IndeterminateCheck"
                                Width="8"
                                Height="3"
                                Fill="{DynamicResource GrayBrush3}"
                                Opacity="0" />
                            <Border
                                x:Name="disabled"
                                Width="18"
                                Height="18"
                                Background="{DynamicResource SemiTransparentWhiteBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.55"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="disabled"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkBox"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="IndeterminateCheck"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{Binding (metro:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="normal" Property="BorderBrush" Value="{Binding (metro:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="checkBox" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="metro:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                            <Setter Property="Padding" Value="0,0,6,0" />
                            <Setter TargetName="LeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
                            <Setter TargetName="RightCol" Property="Width" Value="18" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ImageButtonStyle" TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="Transparent"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                HorizontalAlignment="Stretch"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="False"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFC4E5F6" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#CC3498DB" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>